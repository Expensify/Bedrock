#include <libstuff/SDeburr.h>
#include "BenchmarkBase.h"

#include <string>
#include <vector>

using namespace std;

struct SDeburrBench : tpunit::TestFixture, BenchmarkBase {
    SDeburrBench() : tpunit::TestFixture(
        "SDeburrBench",
        TEST(SDeburrBench::benchShortASCII),
        TEST(SDeburrBench::benchLatin1),
        TEST(SDeburrBench::benchMixedLong),
        TEST(SDeburrBench::benchShortASCIIHigh),
        TEST(SDeburrBench::benchLatin1High),
        TEST(SDeburrBench::benchMixedLongHigh)
    ), BenchmarkBase("SDeburrBench") {}

    void benchShortASCII()
    {
        const vector<string> inputs = {
            "Fabio", "WARIO", "#Pizza", "hello world", "expensify", "chat room #admins"
        };
        auto us = runBench("ShortASCII", inputs, 20000, [](const string& s) {
            return SDeburr::deburr(s);
        });
        ASSERT_GREATER_THAN(us, 0);
    }

    void benchLatin1()
    {
        const vector<string> inputs = {
            "F√°bio", "W√°rio", "Cr√®me Br√ªl√©e", "S√£o Paulo", "sm√∂rg√•sbord",
            "fa√ßade", "√Üsir", "≈íuvre", "√Öngstr√∂m"
        };
        auto us = runBench("Latin1", inputs, 10000, [](const string& s) {
            return SDeburr::deburr(s);
        });
        ASSERT_GREATER_THAN(us, 0);
    }

    void benchMixedLong()
    {
        const vector<string> inputs = {
            "Cr√®me Br√ªl√©e d√©j√† vu ‚Äì S√£o Paulo sm√∂rg√•sbord, Êù±‰∫¨, pizza üçï, r√©sum√©, co√∂perate, na√Øve, voil√†."
        };
        auto us = runBench("MixedLong", inputs, 5000, [](const string& s) {
            return SDeburr::deburr(s);
        });
        ASSERT_GREATER_THAN(us, 0);
    }

    void benchShortASCIIHigh()
    {
        const vector<string> inputs = {
            "Fabio", "WARIO", "#Pizza", "hello world", "expensify", "chat room #admins"
        };
        auto us = runBench("ShortASCIIHigh", inputs, 500000, [](const string& s) {
            return SDeburr::deburr(s);
        });
        ASSERT_GREATER_THAN(us, 0);
    }

    void benchLatin1High()
    {
        const vector<string> inputs = {
            "F√°bio", "W√°rio", "Cr√®me Br√ªl√©e", "S√£o Paulo", "sm√∂rg√•sbord",
            "fa√ßade", "√Üsir", "≈íuvre", "√Öngstr√∂m"
        };
        auto us = runBench("Latin1High", inputs, 500000, [](const string& s) {
            return SDeburr::deburr(s);
        });
        ASSERT_GREATER_THAN(us, 0);
    }

    void benchMixedLongHigh()
    {
        const vector<string> inputs = {
            "Cr√®me Br√ªl√©e d√©j√† vu ‚Äì S√£o Paulo sm√∂rg√•sbord, Êù±‰∫¨, pizza üçï, r√©sum√©, co√∂perate, na√Øve, voil√†."
        };
        auto us = runBench("MixedLongHigh", inputs, 500000, [](const string& s) {
            return SDeburr::deburr(s);
        });
        ASSERT_GREATER_THAN(us, 0);
    }
} __SDeburrBench;


