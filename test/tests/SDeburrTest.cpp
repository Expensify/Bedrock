#include <libstuff/SDeburr.h>
#include <test/lib/tpunit++.hpp>
#include <string>

using namespace std;

struct SDeburrTest : tpunit::TestFixture {
    SDeburrTest() : tpunit::TestFixture("SDeburr",
                                         TEST(SDeburrTest::testBasicASCII),
                                         TEST(SDeburrTest::testDiacritics),
                                         TEST(SDeburrTest::testMixed),
                                         TEST(SDeburrTest::testCombining),
                                         TEST(SDeburrTest::testKitchenSink),
                                         TEST(SDeburrTest::testTurkish),
                                         TEST(SDeburrTest::testPolishSlavic),
                                         TEST(SDeburrTest::testNordic),
                                         TEST(SDeburrTest::testEmojiAndCJK)) {}

    void testBasicASCII() {
        ASSERT_EQUAL(SDeburr::deburr("Fabio"), string("Fabio"));
        ASSERT_EQUAL(SDeburr::deburr("WARIO"), string("WARIO"));
        ASSERT_EQUAL(SDeburr::deburr("#Pizza"), string("#Pizza"));
    }

    void testDiacritics() {
        ASSERT_EQUAL(SDeburr::deburr("F√°bio"), string("Fabio"));
        ASSERT_EQUAL(SDeburr::deburr("W√°rio"), string("Wario"));
        ASSERT_EQUAL(SDeburr::deburr("W√°l√º√Ægi"), string("Waluigi"));
        ASSERT_EQUAL(SDeburr::deburr("√Öngstr√∂m"), string("Angstrom"));
        ASSERT_EQUAL(SDeburr::deburr("fa√ßade"), string("facade"));
        ASSERT_EQUAL(SDeburr::deburr("stra√üe"), string("strasse"));
        ASSERT_EQUAL(SDeburr::deburr("√Üther"), string("AEther"));
        ASSERT_EQUAL(SDeburr::deburr("≈íuvre"), string("OEuvre"));
    }

    void testMixed() {
        ASSERT_EQUAL(SDeburr::deburr(" Caf√© #Team"), string(" Cafe #Team"));
        ASSERT_EQUAL(SDeburr::deburr("L'ESPRIT"), string("L'ESPRIT"));
    }

    void testCombining() {
        // "a" + combining acute (U+0301)
        ASSERT_EQUAL(SDeburr::deburr(string("a\xCC\x81")), string("a"));
    }

    void testKitchenSink() {
        ASSERT_EQUAL(SDeburr::deburr("Cr√®me Br√ªl√©e d√©j√† vu ‚Äì S√£o Paulo sm√∂rg√•sbord"),
                     string("Creme Brulee deja vu ‚Äì Sao Paulo smorgasbord"));
    }

    void testTurkish() {
        ASSERT_EQUAL(SDeburr::deburr("ƒ∞stanbul"), string("Istanbul"));
        ASSERT_EQUAL(SDeburr::deburr("Iƒ±"), string("Ii"));
    }

    void testPolishSlavic() {
        ASSERT_EQUAL(SDeburr::deburr("≈Å√≥d≈∫"), string("Lodz"));
        ASSERT_EQUAL(SDeburr::deburr("≈ör√≥dka"), string("Srodka"));
        ASSERT_EQUAL(SDeburr::deburr("≈ªubr"), string("Zubr"));
        ASSERT_EQUAL(SDeburr::deburr("≈πrebak"), string("Zrebak"));
    }

    void testNordic() {
        ASSERT_EQUAL(SDeburr::deburr("√ûingvellir"), string("THingvellir"));
        ASSERT_EQUAL(SDeburr::deburr("√Üsir"), string("AEsir"));
        ASSERT_EQUAL(SDeburr::deburr("≈íuvre"), string("OEuvre"));
        ASSERT_EQUAL(SDeburr::deburr("√Öngstr√∂m"), string("Angstrom"));
    }

    void testEmojiAndCJK() {
        ASSERT_EQUAL(SDeburr::deburr("pizza üçï"), string("pizza üçï"));
        ASSERT_EQUAL(SDeburr::deburr("Êù±‰∫¨"), string("Êù±‰∫¨"));
    }
} __SDeburrTest;


